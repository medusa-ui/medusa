package sample.getmedusa.showcase.samples.input.special;

import io.getmedusa.medusa.core.annotation.MaxFileSize;
import io.getmedusa.medusa.core.annotation.UIEventPage;
import io.getmedusa.medusa.core.attributes.Attribute;
import io.getmedusa.medusa.core.bidirectional.ServerToClient;
import io.getmedusa.medusa.core.attributes.StandardAttributeKeys;
import io.getmedusa.medusa.core.router.action.DataChunk;
import io.getmedusa.medusa.core.router.action.FileUploadMeta;
import io.getmedusa.medusa.core.router.action.UploadableUI;
import io.getmedusa.medusa.core.session.Session;
import jakarta.validation.Valid;

import java.util.List;

import static io.getmedusa.medusa.core.attributes.Attribute.$$;

@UIEventPage(path = "/detail/uploads", file = "/pages/uploads")
public class UploadsNewController implements UploadableUI {

    final ServerToClient serverToClient;

    public UploadsNewController(ServerToClient serverToClient) {
        this.serverToClient = serverToClient;
    }

    public List<Attribute> setupAttributes() {
        return $$("percentage", 0);
    }

    public List<Attribute> reset() {
        return $$("percentage", 0,
                  "image", null,
                  StandardAttributeKeys.LOADING,  "upload-done");
    }

    @Override
    public void uploadChunk(@Valid @MaxFileSize("1MB") DataChunk dataChunk, Session session) {
        //this is a convenience method to update this session's attribute with the current upload process %
        serverToClient.sendUploadCompletionPercentage("percentage", dataChunk, session);

        if(dataChunk.isCompleted()) {
            serverToClient.sendAttributesToSession($$(StandardAttributeKeys.LOADING,  "upload-done"), session);
        }

        //stream your dataChunk.getChunk() to dataChunk.getFileName() in some storage
        //don't try to store it all in memory, or you lose the benefit of chunking in the first place
        //in this case, we render to the 'image' attribute
    }

    @Override
    public void onCancel(FileUploadMeta uploadMeta, Session session) {
        serverToClient.sendAttributesToSession($$(
            "percentage", 0,
            StandardAttributeKeys.LOADING,  "upload-done"
        ), session);
    }

}